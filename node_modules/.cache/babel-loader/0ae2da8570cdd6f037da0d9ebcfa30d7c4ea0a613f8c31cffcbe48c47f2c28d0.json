{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/runner/work/my-records-app/my-records-app/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/home/runner/work/my-records-app/my-records-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global DOMException */\n\nmodule.exports = clipboardCopy;\nfunction makeError() {\n  return new DOMException('The request is not allowed', 'NotAllowedError');\n}\nfunction copyClipboardApi(_x) {\n  return _copyClipboardApi.apply(this, arguments);\n}\nfunction _copyClipboardApi() {\n  _copyClipboardApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(text) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (navigator.clipboard) {\n            _context.next = 2;\n            break;\n          }\n          throw makeError();\n        case 2:\n          return _context.abrupt(\"return\", navigator.clipboard.writeText(text));\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _copyClipboardApi.apply(this, arguments);\n}\nfunction copyExecCommand(_x2) {\n  return _copyExecCommand.apply(this, arguments);\n}\nfunction _copyExecCommand() {\n  _copyExecCommand = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(text) {\n    var span, selection, range, success;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          // Put the text to copy into a <span>\n          span = document.createElement('span');\n          span.textContent = text;\n\n          // Preserve consecutive spaces and newlines\n          span.style.whiteSpace = 'pre';\n          span.style.webkitUserSelect = 'auto';\n          span.style.userSelect = 'all';\n\n          // Add the <span> to the page\n          document.body.appendChild(span);\n\n          // Make a selection object representing the range of text selected by the user\n          selection = window.getSelection();\n          range = window.document.createRange();\n          selection.removeAllRanges();\n          range.selectNode(span);\n          selection.addRange(range);\n\n          // Copy text to the clipboard\n          success = false;\n          try {\n            success = window.document.execCommand('copy');\n          } finally {\n            // Cleanup\n            selection.removeAllRanges();\n            window.document.body.removeChild(span);\n          }\n          if (success) {\n            _context2.next = 15;\n            break;\n          }\n          throw makeError();\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _copyExecCommand.apply(this, arguments);\n}\nfunction clipboardCopy(_x3) {\n  return _clipboardCopy.apply(this, arguments);\n}\nfunction _clipboardCopy() {\n  _clipboardCopy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(text) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return copyClipboardApi(text);\n        case 3:\n          _context3.next = 15;\n          break;\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.prev = 7;\n          _context3.next = 10;\n          return copyExecCommand(text);\n        case 10:\n          _context3.next = 15;\n          break;\n        case 12:\n          _context3.prev = 12;\n          _context3.t1 = _context3[\"catch\"](7);\n          throw _context3.t1 || _context3.t0 || makeError();\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[0, 5], [7, 12]]);\n  }));\n  return _clipboardCopy.apply(this, arguments);\n}","map":{"version":3,"names":["module","exports","clipboardCopy","makeError","DOMException","copyClipboardApi","_x","_copyClipboardApi","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","text","wrap","_callee$","_context","prev","next","navigator","clipboard","abrupt","writeText","stop","copyExecCommand","_x2","_copyExecCommand","_callee2","span","selection","range","success","_callee2$","_context2","document","createElement","textContent","style","whiteSpace","webkitUserSelect","userSelect","body","appendChild","window","getSelection","createRange","removeAllRanges","selectNode","addRange","execCommand","removeChild","_x3","_clipboardCopy","_callee3","_callee3$","_context3","t0","t1"],"sources":["/home/runner/work/my-records-app/my-records-app/node_modules/clipboard-copy/index.js"],"sourcesContent":["/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global DOMException */\n\nmodule.exports = clipboardCopy\n\nfunction makeError () {\n  return new DOMException('The request is not allowed', 'NotAllowedError')\n}\n\nasync function copyClipboardApi (text) {\n  // Use the Async Clipboard API when available. Requires a secure browsing\n  // context (i.e. HTTPS)\n  if (!navigator.clipboard) {\n    throw makeError()\n  }\n  return navigator.clipboard.writeText(text)\n}\n\nasync function copyExecCommand (text) {\n  // Put the text to copy into a <span>\n  const span = document.createElement('span')\n  span.textContent = text\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre'\n  span.style.webkitUserSelect = 'auto'\n  span.style.userSelect = 'all'\n\n  // Add the <span> to the page\n  document.body.appendChild(span)\n\n  // Make a selection object representing the range of text selected by the user\n  const selection = window.getSelection()\n  const range = window.document.createRange()\n  selection.removeAllRanges()\n  range.selectNode(span)\n  selection.addRange(range)\n\n  // Copy text to the clipboard\n  let success = false\n  try {\n    success = window.document.execCommand('copy')\n  } finally {\n    // Cleanup\n    selection.removeAllRanges()\n    window.document.body.removeChild(span)\n  }\n\n  if (!success) throw makeError()\n}\n\nasync function clipboardCopy (text) {\n  try {\n    await copyClipboardApi(text)\n  } catch (err) {\n    // ...Otherwise, use document.execCommand() fallback\n    try {\n      await copyExecCommand(text)\n    } catch (err2) {\n      throw (err2 || err || makeError())\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}